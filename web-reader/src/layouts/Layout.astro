---
import '../styles/global.css';
import ThemeToggle from '../components/ThemeToggle.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="The Archeometer - English Translation" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    </script>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 min-h-screen">
    <header class="bg-white dark:bg-gray-800 shadow-sm">
      <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16 w-full">
          <div class="flex w-full">
            <div class="flex-shrink-0 flex items-center">
              <a href="/" class="text-xl font-bold text-gray-900 dark:text-white">The Archeometer</a>
            </div>

            <div class="hidden w-full sm:ml-6 sm:flex gap-4">
              <a 
                href="/" 
                class={`inline-flex items-center px-1 pt-1 text-sm font-medium ${Astro.url.pathname === '/' ? 'border-b-2 border-indigo-500 text-gray-900 dark:text-white' : 'text-gray-500 dark:text-gray-400 hover:border-b-2 hover:border-gray-300 dark:hover:border-gray-600'}`}
              >
                E-Book
              </a>
              <a 
                href="/natal-chart" 
                class={`inline-flex items-center px-1 pt-1 text-sm font-medium ${Astro.url.pathname === '/natal-chart' ? 'border-b-2 border-indigo-500 text-gray-900 dark:text-white' : 'text-gray-500 dark:text-gray-400 hover:border-b-2 hover:border-gray-300 dark:hover:border-gray-600'}`}
              >
                Saint Yves Natal Chart
              </a>
            </div>
          </div>

          <ThemeToggle />
          
          {/* Mobile menu button */}
          <div class="sm:hidden flex items-center">
            <button 
              type="button" 
              class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
              aria-controls="mobile-menu"
              aria-expanded="false"
            >
              <span class="sr-only">Open main menu</span>
              <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
          </div>
        </div>
      </nav>

      {/* Mobile menu */}
      <div class="sm:hidden hidden" id="mobile-menu">
        <div class="pt-2 pb-3 space-y-1">
          <a
            href="/"
            class={`block pl-3 pr-4 py-2 text-base font-medium ${Astro.url.pathname === '/' ? 'bg-indigo-50 dark:bg-indigo-900/50 border-l-4 border-indigo-500 text-indigo-700 dark:text-indigo-300' : 'text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700'}`}
          >
            E-Book
          </a>
          <a
            href="/natal-chart"
            class={`block pl-3 pr-4 py-2 text-base font-medium ${Astro.url.pathname === '/natal-chart' ? 'bg-indigo-50 dark:bg-indigo-900/50 border-l-4 border-indigo-500 text-indigo-700 dark:text-indigo-300' : 'text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700'}`}
          >
            Saint Yves Natal Chart
          </a>
        </div>
      </div>
    </header>

    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <slot />
    </main>

    <script>
      // Mobile menu toggle
      const mobileMenuButton = document.querySelector('.mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');

      mobileMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.toggle('hidden');
      });
    </script>
  </body>
</html> 